<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>passo = 1;
passo_max = 9;

bob = instance_create(150,room_height-50,obj_botao);
bob.txt = "Back";
bob.scr = choose_back;
bob.back = 1;

for (i=1;i&lt;passo_max+1;i++) {
    bob = instance_create(0,0,obj_howshow)
    bob.num = i;
}

bob = instance_create((room_width/2)-100,room_height-50,obj_botaoseta);
bob.dir = -1;
bob.scr = seta_left
bob = instance_create((room_width/2)+100,room_height-50,obj_botaoseta);
bob.dir = 1;
bob.scr = seta_right

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check_pressed(vk_left) {
    passo = clamp(passo-1,1,passo_max);
}
if keyboard_check_pressed(vk_right) {
    passo = clamp(passo+1,1,passo_max);
}

switch passo {

    case 1:
        txt = "This game is played in turns.#Every game starts with a field space."
    break;
    
    case 2:
        txt = "Clicking with right mouse button will create square#which will expand the field space. Each player#has 3 squares available.";
    break;
    
    case 3:
        txt = "Clicking with the left mouse button will create a triangle#which does nothing by itself.";
    break;
    
    case 4:
        txt = "When put next to other triangles, it will generate a circle from its neighbours,#we call this claiming. Circles give the player 1 point.";
    break;
    
    case 5:
        txt = "Circles can claim other triangles by themselves,#creating a chain reaction. Indirect circles gives 2 points.";
    break;
    
    case 6:
        txt = "Players can claim a square, but only indirectly.#Claiming squares will destroy field space around it,#even if it didn't create it. Claiming squares gives 3 points.";
    break;
    
    case 7:
        txt = "Pressing space button on the keyboard will double the game scale,#creating more space and rendering occupied spaces useless.#Doubling the scale will cost your turn. The scale can only be doubled one time.";
    break;
    
    case 8:
        txt = "You can use WASD or arrow keys#to move the camera around.";
    break;
    
    case 9:
        txt = "That's it, have fun.";
    break;


}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_center);
draw_set_color(c_white);
draw_set_alpha(0.7*global.alpha);
draw_set_font(font_normal);

draw_text(room_width/2,(room_height/2)+200,txt);

draw_text(room_width/2,room_height-50,string(passo) + " / " + string(passo_max))
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
