<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-500</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>jogador = 0;
active_player = 0
winned = false

radius_cam = 200
liberou = false

txto = "";

ctxt = 0;

gw = 1280;
gh = 720;

guided = false;

xf = 0
yf = 0



randomize();

online = 0

mag = 0.001;

xv = (((room_width/2) div 32)*32)+16;
yv = (((room_height/2) div 32)*32)+16;

bot_begin = false;

start = false;

view_xview = (((room_width/2) div 32)*32)+16 - view_wview/2
view_yview = (((room_height/2) div 32)*32)+16 - view_hview/2

Estado = "pregame1";

r = 255
g = 255
b = 255

xc = ((room_width/2) div 32)*32;
yc = ((room_height/2) div 32)*32;

for(i=0;i&lt;8;i++) {
    quads[i] = 3;
}

ready = true;

jogadores = ds_list_create();
cores = ds_list_create();
bots = ds_list_create();
empty_spaces = ds_list_create();
musics = ds_list_create();
ds_list_add(cores,c_red,c_blue,c_green,c_yellow);

msx = instance_create(0,0,obj_mus)
msx.name = "Cool Vibes";
msx.music = mus_vibes;
ds_list_add(musics,msx);
msx = instance_create(0,0,obj_mus)
msx.name = "Covert Affair";
msx.music =  mus_affair;
ds_list_add(musics,msx);
msx = instance_create(0,0,obj_mus)
msx.name = "Dances and Dames";
msx.music = mus_dames;
ds_list_add(musics,msx);
msx = instance_create(0,0,obj_mus)
msx.name = "Deadly Roulette";
msx.music = mus_roulette;
ds_list_add(musics,msx);
msx = instance_create(0,0,obj_mus)
msx.name = "Walking Along";
msx.music = mus_walong;
ds_list_add(musics,msx);

ds_list_shuffle(musics);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(jogadores);
ds_list_destroy(cores);
ds_list_destroy(bots);
ds_list_destroy(empty_spaces);
ds_list_destroy(musics);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var winner_points = 0;
    var win_num = 0;
    var empat = 0;
    for (i=0;i&lt;ds_list_size(jogadores);i++) {
        if pontos[i] &gt; winner_points {
            winner_points = pontos[i]
            win_num = i+1
            empat = 0;
            continue;
        }
        if pontos[i] == winner_points {
            empat++;
        }
        
    }
    win = instance_create(0,0,obj_win);
    if empat &gt; 0 {
        win.cor = c_black
        win.num = "Nobody"
    }
    else {
        jogador = win_num-1;
        win.cor = pessa_cor();
        win.num = jogadores[| win_num-1];
    }
    win.rmm = rm_menu;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>nowp = instance_create(0,0,obj_nowp);
nowp.txt = musics[| m_counter].name;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ready = true;
checa_bot();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch Estado {
    case "pregame1":
        bck = instance_create(150,gh-50,obj_botao);
        bck.txt = "Back";
        bck.back = 1;
    
        if global.localis {
            bob = instance_create(gw-200,100,obj_botao);
            bob.txt = "Add Player";
            bob.scr = add_player;
            bob = instance_create(gw-200,200,obj_botao);
            bob.txt = "Add Bot";
            bob.scr = add_bot;
            bob = instance_create(gw-200,300,obj_botao);
            bob.txt = "Clear";
            bob.scr = clear_players;
            bob = instance_create(gw-200,400,obj_botao);
            bob.txt = "Start Game";
            bob.scr = start_game;
            
            Estado = "pregame3";
            
            p_counter = 0;
            b_counter = 0;
        }
        else {
            hst = instance_create(gw/2,(gh/2)-50,obj_botao);
            hst.txt = "Host";
            hst.scr = action_host;
            clt = instance_create(gw/2,(gh/2)+50,obj_botao);
            clt.txt = "Join";
            clt.scr = action_client;
            
            online = 1;
            b_counter = 0;
            instance_create(0,0,obj_network);
            Estado = "pregame2";
        }
    break;

    case "pregame2":
        bck.scr = choose_back_online;
    break;
    
    case "pregame3":
        bck.scr = choose_back;
    break;

    case "game":  
        if ready and !(online and jogador != active_player) and !(!online and bots[| jogador] != 0) {
            if keyboard_check_pressed(vk_space) and inflas &gt; 0 {
                if online {
                    with obj_network {
                        event_user(3);
                    }
                }
                else {
                    with base {
                        infla(other.xc,other.yc);
                    }
                        
                    jogador = circular(jogador+1,0,numjog-1);
                    ready = false;
                    alarm[0] = 45;    
                    inflas--;
                }
            
            }
        
            if quads[jogador] &gt; 0 {
                if mouse_check_button_pressed(mb_right) and colide_empty((mouse_x div 32)*32,(mouse_y div 32)*32) {
                    if online {
                        with obj_network {
                            xis = (mouse_x div 32)*32
                            yis = (mouse_y div 32)*32
                            event_user(0);
                        }
                    }
                    else {
                        create_quadrado((mouse_x div 32)*32,(mouse_y div 32)*32,(mouse_x div 32)*32 + 32,(mouse_y div 32)*32 + 32,jogador,0)
                        quads[jogador]--;
                        jogador = circular(jogador+1,0,numjog-1);
                        
                        checa_bot();
                    }
                    
                }
            }
            
            if mouse_check_button_pressed(mb_left) and colide_empty((mouse_x div 32)*32,(mouse_y div 32)*32) {
                if online {
                    with obj_network {
                        xis = (mouse_x div 32)*32
                        yis = (mouse_y div 32)*32
                        event_user(1);
                    }
                }
                else {
                    create_triangulo((mouse_x div 32)*32,(mouse_y div 32)*32,(mouse_x div 32)*32 + 32,(mouse_y div 32)*32 + 32,jogador,0)
                    jogador = circular(jogador+1,0,numjog-1);
                    
                    checa_bot();
                }
            }
        }
    break;

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Camera

if Estado == "game" {
    if keyboard_check(vk_up) or keyboard_check(ord('W')) and camera_allow(0,-5) {yv-=5;}
    if keyboard_check(vk_down) or keyboard_check(ord('S')) and camera_allow(0,5) {yv+=5;}
    if keyboard_check(vk_left) or keyboard_check(ord('A')) and camera_allow(-5,0) {xv-=5;}
    if keyboard_check(vk_right) or keyboard_check(ord('D')) and camera_allow(5,0) {xv+=5;}
}


view_wview = 1280*mag;
view_hview = 720*mag;

if start and mag &lt; 1 {
    mag += (1-mag)/20;
}
if start and mag &gt; 0.8 {
    ready = true;
    if !bot_begin {
        checa_bot();
        bot_begin = 1;
    }
}

if guided {
    xf = xt + lengthdir_x(radius_cam,ang);
    yf = yt + lengthdir_y(radius_cam,ang);

    if abs(xf-xv) &gt; 0.1 {        
        xv += ((xf-xv)/10);
        yv += ((yf-yv)/10);
    }
    else {
        guided = false;
        ready = true
    }
}

view_xview = xv - view_wview/2
view_yview = yv - view_hview/2
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if Estado == "game" and !audio_is_playing(global.musica) {
    m_counter = circular(m_counter+1,0,ds_list_size(musics)-1)
    global.musica = audio_play_sound(musics[| m_counter].music,1,0);
    
    nowp = instance_create(0,0,obj_nowp);
    nowp.txt = musics[| m_counter].name;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Winning
if !(!instance_exists(obj_empty) and !winned) {
    alarm[5] = 5;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Leave match
if !instance_exists(obj_exitgame) and keyboard_check_pressed(vk_escape) {
    instance_create(0,0,obj_exitgame);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch Estado {

    case "pregame2": case "pregame3":
        draw_set_halign(fa_left);
        draw_set_valign(fa_top);
        draw_set_color(c_white);
        draw_set_alpha(global.alpha);
        draw_text(100,100,"Participants");    
    
        for(i=0;i&lt;ds_list_size(jogadores);i++) {
            draw_set_color(cores[| i]);
            draw_text(150,150+50*i,jogadores[| i]);
            draw_set_color(c_black);
        }
        draw_set_alpha(1);
    break;
    
    case "game":
        for(i=0;i&lt;ds_list_size(jogadores);i++){
            pontos[i] = 0
        }
        
        with obj_circulo {
            other.pontos[jogador] += value;
        }
        
        for(i=0;i&lt;ds_list_size(jogadores);i++){
            draw_set_halign(fa_left);
            draw_set_valign(fa_top);
            draw_set_font(font_normal);
            if i == 3 {
                draw_set_color(make_color_rgb(200,170,0))
            }
            else {
                draw_set_color(cores[| i]);
            }
            draw_text((gw/2)-(ds_list_size(jogadores)-1)*25+i*50,25,pontos[i]);
            
            draw_set_alpha(0.3)
            for(j=0;j&lt;quads[i];j++) {
                draw_rectangle(gw-20-(30*j)-10,20+(30*i)-10,gw-20-(30*j)+10,20+(30*i)+10,0)
            }
            draw_set_alpha(1)
        }
        //draw_set_color(c_black);
        //draw_circle(gw/2,gh/2,radius_cam,1);
        
    break;
    
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch Estado {

    case "game":
        draw_set_color(c_white)
        draw_rectangle((mouse_x div 32)*32,(mouse_y div 32)*32,(mouse_x div 32)*32 + 32,(mouse_y div 32)*32 + 32,1)
    break;
    
}

//draw_circle(xf,yf,20,0);




</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Cor de fundo

switch jogador {

    case 0:
        rr = 255;
        gg = 185;
        bb = 167;
    break;
    
    case 1:
        rr = 207;
        gg = 214;
        bb = 255;
    break;
    
    case 2:
        rr = 205;
        gg = 255;
        bb = 186;
    break;
    
    case 3:
        rr = 255;
        gg = 245;
        bb = 186;
    break;


}

r += (rr-r)/10;
g += (gg-g)/10;
b += (bb-b)/10;


background_color = make_color_rgb(r,g,b);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
